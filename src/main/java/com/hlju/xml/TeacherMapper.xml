<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hlju.dao.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.hlju.model.Teacher" >
    <id column="tea_id" property="teaId" jdbcType="VARCHAR" />
    <result column="tea_name" property="teaName" jdbcType="VARCHAR" />
    <result column="tea_sex" property="teaSex" jdbcType="INTEGER" />
    <result column="paper_now" property="paperNow" jdbcType="INTEGER" />
    <result column="paper_limit" property="paperLimit" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="back_1" property="back1" jdbcType="VARCHAR" />
    <result column="back_2" property="back2" jdbcType="VARCHAR" />
    <result column="back_3" property="back3" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="RespMap" type="com.hlju.response.TeacherResp" >
    <id column="tea_id" property="teaId" jdbcType="VARCHAR" />
    <result column="tea_name" property="teaName" jdbcType="VARCHAR" />
    <result column="tea_sex" property="teaSex" jdbcType="INTEGER" />
    <result column="paper_now" property="paperNow" jdbcType="INTEGER" />
    <result column="paper_limit" property="paperLimit" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    tea_id, tea_name, tea_sex, paper_now, paper_limit, grade_id, college_id, major_id, 
    class_id, back_1, back_2, back_3
  </sql>

  <sql id="RespTeacher_List" >
    tea_id, tea_name, tea_sex, paper_now, paper_limit, grade_id, college_id, major_id,
    class_id
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where tea_id = #{teaId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teacher
    where tea_id = #{teaId,jdbcType=VARCHAR}
  </delete>

  <insert id="insertSelective" parameterType="com.hlju.model.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teaId != null" >
        tea_id,
      </if>
      <if test="teaName != null" >
        tea_name,
      </if>
      <if test="teaSex != null" >
        tea_sex,
      </if>
      <if test="paperNow != null" >
        paper_now,
      </if>
      <if test="paperLimit != null" >
        paper_limit,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="back1 != null" >
        back_1,
      </if>
      <if test="back2 != null" >
        back_2,
      </if>
      <if test="back3 != null" >
        back_3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teaId != null" >
        #{teaId,jdbcType=VARCHAR},
      </if>
      <if test="teaName != null" >
        #{teaName,jdbcType=VARCHAR},
      </if>
      <if test="teaSex != null" >
        #{teaSex,jdbcType=INTEGER},
      </if>
      <if test="paperNow != null" >
        #{paperNow,jdbcType=INTEGER},
      </if>
      <if test="paperLimit != null" >
        #{paperLimit,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="back1 != null" >
        #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null" >
        #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null" >
        #{back3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.hlju.model.Teacher" >
    update teacher
    <set >
      <if test="teaName != null" >
        tea_name = #{teaName,jdbcType=VARCHAR},
      </if>
      <if test="teaSex != null" >
        tea_sex = #{teaSex,jdbcType=INTEGER},
      </if>
      <if test="paperNow != null" >
        paper_now = #{paperNow,jdbcType=INTEGER},
      </if>
      <if test="paperLimit != null" >
        paper_limit = #{paperLimit,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="back1 != null" >
        back_1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null" >
        back_2 = #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null" >
        back_3 = #{back3,jdbcType=VARCHAR},
      </if>
    </set>
    where tea_id = #{teaId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.hlju.model.Teacher" >
    update teacher
    set tea_name = #{teaName,jdbcType=VARCHAR},
      tea_sex = #{teaSex,jdbcType=INTEGER},
      paper_now = #{paperNow,jdbcType=INTEGER},
      paper_limit = #{paperLimit,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      college_id = #{collegeId,jdbcType=INTEGER},
      major_id = #{majorId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      back_1 = #{back1,jdbcType=VARCHAR},
      back_2 = #{back2,jdbcType=VARCHAR},
      back_3 = #{back3,jdbcType=VARCHAR}
    where tea_id = #{teaId,jdbcType=VARCHAR}
  </update>

  <select id="getTeacherRespList" resultMap="RespMap" parameterType="com.hlju.model.Teacher">
    select
    <include refid="RespTeacher_List"/>
    from teacher
    where 1=1
    <if test="teaId != null" >
      and tea_id = #{teaId,jdbcType=VARCHAR}
    </if>
    <if test="teaName != null" >
      and tea_name = #{teaName,jdbcType=VARCHAR}
    </if>
    <if test="teaSex != null" >
      and tea_sex = #{teaSex,jdbcType=INTEGER}
    </if>
    <if test="paperNow != null" >
      and paper_now = #{paperNow,jdbcType=INTEGER}
    </if>
    <if test="paperLimit != null" >
      and paper_limit = #{paperLimit,jdbcType=INTEGER}
    </if>
    <if test="gradeId != null" >
      and grade_id = #{gradeId,jdbcType=INTEGER}
    </if>
    <if test="collegeId != null" >
      and college_id = #{collegeId,jdbcType=INTEGER}
    </if>
    <if test="majorId != null" >
      and major_id = #{majorId,jdbcType=INTEGER}
    </if>
    <if test="classId != null" >
      and class_id = #{classId,jdbcType=INTEGER}
    </if>
    <if test="search != null and search !='' ">
      and (
      tea_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or tea_name like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or tea_sex like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or paper_now like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or paper_limit like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or grade_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or college_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or major_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or class_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      )
    </if>
  </select>

  <select id="getTeacherResp" resultMap="RespMap" parameterType="com.hlju.model.Teacher">
    select
    <include refid="RespTeacher_List"/>
    from teacher
    where 1=1
    <if test="teaId != null" >
      and tea_id = #{teaId,jdbcType=VARCHAR}
    </if>
    <if test="teaName != null" >
      and tea_name = #{teaName,jdbcType=VARCHAR}
    </if>
    <if test="teaSex != null" >
      and tea_sex = #{teaSex,jdbcType=INTEGER}
    </if>
    <if test="paperNow != null" >
      and paper_now = #{paperNow,jdbcType=INTEGER}
    </if>
    <if test="paperLimit != null" >
      and paper_limit = #{paperLimit,jdbcType=INTEGER}
    </if>
    <if test="gradeId != null" >
      and grade_id = #{gradeId,jdbcType=INTEGER}
    </if>
    <if test="collegeId != null" >
      and college_id = #{collegeId,jdbcType=INTEGER}
    </if>
    <if test="majorId != null" >
      and major_id = #{majorId,jdbcType=INTEGER}
    </if>
    <if test="classId != null" >
      and class_id = #{classId,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getCount" parameterType="com.hlju.model.Teacher" resultType="java.lang.Integer">
    select
    count(*)
    from teacher
    where 1=1
    <if test="teaId != null" >
      and tea_id = #{teaId,jdbcType=VARCHAR}
    </if>
    <if test="teaName != null" >
      and tea_name = #{teaName,jdbcType=VARCHAR}
    </if>
    <if test="teaSex != null" >
      and tea_sex = #{teaSex,jdbcType=INTEGER}
    </if>
    <if test="paperNow != null" >
      and paper_now = #{paperNow,jdbcType=INTEGER}
    </if>
    <if test="paperLimit != null" >
      and paper_limit = #{paperLimit,jdbcType=INTEGER}
    </if>
    <if test="gradeId != null" >
      and grade_id = #{gradeId,jdbcType=INTEGER}
    </if>
    <if test="collegeId != null" >
      and college_id = #{collegeId,jdbcType=INTEGER}
    </if>
    <if test="majorId != null" >
      and major_id = #{majorId,jdbcType=INTEGER}
    </if>
    <if test="classId != null" >
      and class_id = #{classId,jdbcType=INTEGER}
    </if>
    <if test="search != null and search !='' ">
      and (
      tea_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or tea_name like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or tea_sex like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or paper_now like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or paper_limit like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or grade_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or college_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or major_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      or class_id like CONCAT('%',#{search,jdbcType=VARCHAR},'%' )
      )
    </if>
  </select>

</mapper>